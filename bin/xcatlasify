#! /usr/bin/env ruby

require "XCUtils/version"
require 'rubygems'

require "thor"
require_relative "../lib/XCUtils/xcutils_resizer"
require_relative "../lib/XCUtils/xcutils_patcher"
require_relative "../lib/XCUtils/xcassets_packer"

class XCAtlasify < Thor

  desc "resize [src-dir, tgt-dir]", "Resize *.@2x~ipad named images and move em into XCodes atlases."
  long_desc <<-LONGDESC
    This is a little helper to resize @2x~ipad artwork to all required sizes using rmagick.
    \x5On top, the output will be formatted to suit XCodes requirements for sprite atlases.
    \x5Images will be resized carefully by first extending images to be dividable by 4 and then generating smaller half and quarter resolutions.
    LONGDESC
  def resize(src, tgt)
    validate_support
    ARGV.shift
    XCUtils::XCUtilsResizer.start
  end

  desc "sort", "This is a little helper to sort a directory containing normal, @2x, ~ipad, @2x~ipad artwork into 4 atlases."
  def sort
    validate_support
    ARGV.shift
    XCUtils::XCUtilsSorter.start
  end

  desc "patch [patch-vrs, base-atlas]", "This patches the current 'resize' result (directory structure) to the latest version"
  def patch(vrs, base)
    validate_support
    ARGV.shift
    XCUtils::XCUtilsPatcher.start
  end

  register(XCUtils::XCAssetsPacker, "xcassets", "xcassets", "This is a little helper to build xcassets from a directory containing normal @2x~ipad artwork.")

  private
  def validate_support
    # check if the action is valid...
  end

end

XCAtlasify.start